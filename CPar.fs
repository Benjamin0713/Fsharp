// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 22 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | SELFADD
  | SELFMINUS
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FLOAT
  | PLUSSEMI
  | MINUSSEMI
  | TIMESSEMI
  | DIVSEMI
  | MODSEMI
  | MAX
  | MIN
  | ABS
  | WENHAO
  | MAOHAO
  | CSTFLOAT of (float32)
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_SELFADD
    | TOKEN_SELFMINUS
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FLOAT
    | TOKEN_PLUSSEMI
    | TOKEN_MINUSSEMI
    | TOKEN_TIMESSEMI
    | TOKEN_DIVSEMI
    | TOKEN_MODSEMI
    | TOKEN_MAX
    | TOKEN_MIN
    | TOKEN_ABS
    | TOKEN_WENHAO
    | TOKEN_MAOHAO
    | TOKEN_CSTFLOAT
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_ConstFloat
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | NOT  -> 11 
  | SEQOR  -> 12 
  | SEQAND  -> 13 
  | EQ  -> 14 
  | NE  -> 15 
  | GT  -> 16 
  | LT  -> 17 
  | GE  -> 18 
  | LE  -> 19 
  | PLUS  -> 20 
  | MINUS  -> 21 
  | TIMES  -> 22 
  | DIV  -> 23 
  | MOD  -> 24 
  | SELFADD  -> 25 
  | SELFMINUS  -> 26 
  | CHAR  -> 27 
  | ELSE  -> 28 
  | IF  -> 29 
  | INT  -> 30 
  | NULL  -> 31 
  | PRINT  -> 32 
  | PRINTLN  -> 33 
  | RETURN  -> 34 
  | VOID  -> 35 
  | WHILE  -> 36 
  | FLOAT  -> 37 
  | PLUSSEMI  -> 38 
  | MINUSSEMI  -> 39 
  | TIMESSEMI  -> 40 
  | DIVSEMI  -> 41 
  | MODSEMI  -> 42 
  | MAX  -> 43 
  | MIN  -> 44 
  | ABS  -> 45 
  | WENHAO  -> 46 
  | MAOHAO  -> 47 
  | CSTFLOAT _ -> 48 
  | CSTSTRING _ -> 49 
  | NAME _ -> 50 
  | CSTINT _ -> 51 
  | CSTBOOL _ -> 52 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_NOT 
  | 12 -> TOKEN_SEQOR 
  | 13 -> TOKEN_SEQAND 
  | 14 -> TOKEN_EQ 
  | 15 -> TOKEN_NE 
  | 16 -> TOKEN_GT 
  | 17 -> TOKEN_LT 
  | 18 -> TOKEN_GE 
  | 19 -> TOKEN_LE 
  | 20 -> TOKEN_PLUS 
  | 21 -> TOKEN_MINUS 
  | 22 -> TOKEN_TIMES 
  | 23 -> TOKEN_DIV 
  | 24 -> TOKEN_MOD 
  | 25 -> TOKEN_SELFADD 
  | 26 -> TOKEN_SELFMINUS 
  | 27 -> TOKEN_CHAR 
  | 28 -> TOKEN_ELSE 
  | 29 -> TOKEN_IF 
  | 30 -> TOKEN_INT 
  | 31 -> TOKEN_NULL 
  | 32 -> TOKEN_PRINT 
  | 33 -> TOKEN_PRINTLN 
  | 34 -> TOKEN_RETURN 
  | 35 -> TOKEN_VOID 
  | 36 -> TOKEN_WHILE 
  | 37 -> TOKEN_FLOAT 
  | 38 -> TOKEN_PLUSSEMI 
  | 39 -> TOKEN_MINUSSEMI 
  | 40 -> TOKEN_TIMESSEMI 
  | 41 -> TOKEN_DIVSEMI 
  | 42 -> TOKEN_MODSEMI 
  | 43 -> TOKEN_MAX 
  | 44 -> TOKEN_MIN 
  | 45 -> TOKEN_ABS 
  | 46 -> TOKEN_WENHAO 
  | 47 -> TOKEN_MAOHAO 
  | 48 -> TOKEN_CSTFLOAT 
  | 49 -> TOKEN_CSTSTRING 
  | 50 -> TOKEN_NAME 
  | 51 -> TOKEN_CSTINT 
  | 52 -> TOKEN_CSTBOOL 
  | 55 -> TOKEN_end_of_input
  | 53 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtU 
    | 31 -> NONTERM_StmtU 
    | 32 -> NONTERM_StmtU 
    | 33 -> NONTERM_Expr 
    | 34 -> NONTERM_Expr 
    | 35 -> NONTERM_ExprNotAccess 
    | 36 -> NONTERM_ExprNotAccess 
    | 37 -> NONTERM_ExprNotAccess 
    | 38 -> NONTERM_ExprNotAccess 
    | 39 -> NONTERM_ExprNotAccess 
    | 40 -> NONTERM_ExprNotAccess 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_AtExprNotAccess 
    | 68 -> NONTERM_AtExprNotAccess 
    | 69 -> NONTERM_AtExprNotAccess 
    | 70 -> NONTERM_AtExprNotAccess 
    | 71 -> NONTERM_Access 
    | 72 -> NONTERM_Access 
    | 73 -> NONTERM_Access 
    | 74 -> NONTERM_Access 
    | 75 -> NONTERM_Access 
    | 76 -> NONTERM_Exprs 
    | 77 -> NONTERM_Exprs 
    | 78 -> NONTERM_Exprs1 
    | 79 -> NONTERM_Exprs1 
    | 80 -> NONTERM_Const 
    | 81 -> NONTERM_Const 
    | 82 -> NONTERM_Const 
    | 83 -> NONTERM_Const 
    | 84 -> NONTERM_ConstFloat 
    | 85 -> NONTERM_ConstFloat 
    | 86 -> NONTERM_Type 
    | 87 -> NONTERM_Type 
    | 88 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 55 
let _fsyacc_tagOfErrorTerminal = 53

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | SELFADD  -> "SELFADD" 
  | SELFMINUS  -> "SELFMINUS" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FLOAT  -> "FLOAT" 
  | PLUSSEMI  -> "PLUSSEMI" 
  | MINUSSEMI  -> "MINUSSEMI" 
  | TIMESSEMI  -> "TIMESSEMI" 
  | DIVSEMI  -> "DIVSEMI" 
  | MODSEMI  -> "MODSEMI" 
  | MAX  -> "MAX" 
  | MIN  -> "MIN" 
  | ABS  -> "ABS" 
  | WENHAO  -> "WENHAO" 
  | MAOHAO  -> "MAOHAO" 
  | CSTFLOAT _ -> "CSTFLOAT" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | SELFADD  -> (null : System.Object) 
  | SELFMINUS  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | PLUSSEMI  -> (null : System.Object) 
  | MINUSSEMI  -> (null : System.Object) 
  | TIMESSEMI  -> (null : System.Object) 
  | DIVSEMI  -> (null : System.Object) 
  | MODSEMI  -> (null : System.Object) 
  | MAX  -> (null : System.Object) 
  | MIN  -> (null : System.Object) 
  | ABS  -> (null : System.Object) 
  | WENHAO  -> (null : System.Object) 
  | MAOHAO  -> (null : System.Object) 
  | CSTFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 8us; 65535us; 0us; 6us; 4us; 6us; 25us; 34us; 29us; 34us; 35us; 34us; 37us; 42us; 40us; 42us; 43us; 42us; 4us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 25us; 26us; 29us; 30us; 3us; 65535us; 25us; 33us; 29us; 33us; 35us; 36us; 8us; 65535us; 27us; 28us; 31us; 32us; 37us; 54us; 40us; 54us; 43us; 54us; 58us; 54us; 59us; 54us; 64us; 54us; 3us; 65535us; 37us; 38us; 40us; 41us; 43us; 44us; 4us; 65535us; 37us; 40us; 40us; 40us; 43us; 40us; 58us; 67us; 6us; 65535us; 37us; 45us; 40us; 45us; 43us; 45us; 58us; 46us; 59us; 60us; 64us; 65us; 6us; 65535us; 37us; 47us; 40us; 47us; 43us; 47us; 58us; 47us; 59us; 66us; 64us; 68us; 41us; 65535us; 37us; 48us; 40us; 48us; 43us; 48us; 50us; 52us; 56us; 57us; 58us; 48us; 59us; 48us; 62us; 63us; 64us; 48us; 80us; 81us; 82us; 83us; 84us; 85us; 86us; 87us; 88us; 89us; 90us; 91us; 93us; 123us; 96us; 97us; 98us; 99us; 124us; 101us; 125us; 102us; 126us; 103us; 127us; 104us; 128us; 105us; 129us; 106us; 130us; 107us; 131us; 108us; 132us; 109us; 133us; 110us; 134us; 111us; 135us; 112us; 136us; 113us; 137us; 114us; 138us; 116us; 140us; 117us; 141us; 118us; 144us; 119us; 145us; 120us; 148us; 121us; 152us; 115us; 163us; 122us; 166us; 123us; 41us; 65535us; 37us; 71us; 40us; 71us; 43us; 71us; 50us; 71us; 56us; 71us; 58us; 71us; 59us; 71us; 62us; 71us; 64us; 71us; 80us; 71us; 82us; 71us; 84us; 71us; 86us; 71us; 88us; 71us; 90us; 71us; 93us; 71us; 96us; 71us; 98us; 71us; 124us; 71us; 125us; 71us; 126us; 71us; 127us; 71us; 128us; 71us; 129us; 71us; 130us; 71us; 131us; 71us; 132us; 71us; 133us; 71us; 134us; 71us; 135us; 71us; 136us; 71us; 137us; 71us; 138us; 71us; 140us; 71us; 141us; 71us; 144us; 71us; 145us; 71us; 148us; 71us; 152us; 72us; 163us; 71us; 166us; 71us; 42us; 65535us; 37us; 73us; 40us; 73us; 43us; 73us; 50us; 73us; 56us; 73us; 58us; 73us; 59us; 73us; 62us; 73us; 64us; 73us; 80us; 73us; 82us; 73us; 84us; 73us; 86us; 73us; 88us; 73us; 90us; 73us; 93us; 73us; 96us; 73us; 98us; 73us; 124us; 73us; 125us; 73us; 126us; 73us; 127us; 73us; 128us; 73us; 129us; 73us; 130us; 73us; 131us; 73us; 132us; 73us; 133us; 73us; 134us; 73us; 135us; 73us; 136us; 73us; 137us; 73us; 138us; 73us; 140us; 73us; 141us; 73us; 144us; 73us; 145us; 73us; 148us; 73us; 152us; 73us; 160us; 162us; 163us; 73us; 166us; 73us; 46us; 65535us; 37us; 70us; 40us; 70us; 43us; 70us; 50us; 70us; 56us; 70us; 58us; 70us; 59us; 70us; 62us; 70us; 64us; 70us; 74us; 75us; 76us; 77us; 80us; 70us; 82us; 70us; 84us; 70us; 86us; 70us; 88us; 70us; 90us; 70us; 93us; 70us; 96us; 70us; 98us; 70us; 124us; 70us; 125us; 70us; 126us; 70us; 127us; 70us; 128us; 70us; 129us; 70us; 130us; 70us; 131us; 70us; 132us; 70us; 133us; 70us; 134us; 70us; 135us; 70us; 136us; 70us; 137us; 70us; 138us; 70us; 140us; 70us; 141us; 70us; 144us; 70us; 145us; 70us; 148us; 70us; 152us; 69us; 154us; 155us; 157us; 158us; 160us; 161us; 163us; 70us; 166us; 70us; 1us; 65535us; 93us; 94us; 2us; 65535us; 93us; 165us; 166us; 167us; 42us; 65535us; 37us; 150us; 40us; 150us; 43us; 150us; 50us; 150us; 56us; 150us; 58us; 150us; 59us; 150us; 62us; 150us; 64us; 150us; 80us; 150us; 82us; 150us; 84us; 150us; 86us; 150us; 88us; 150us; 90us; 150us; 93us; 150us; 96us; 150us; 98us; 150us; 124us; 150us; 125us; 150us; 126us; 150us; 127us; 150us; 128us; 150us; 129us; 150us; 130us; 150us; 131us; 150us; 132us; 150us; 133us; 150us; 134us; 150us; 135us; 150us; 136us; 150us; 137us; 150us; 138us; 150us; 140us; 150us; 141us; 150us; 144us; 150us; 145us; 150us; 148us; 150us; 152us; 150us; 160us; 150us; 163us; 150us; 166us; 150us; 42us; 65535us; 37us; 151us; 40us; 151us; 43us; 151us; 50us; 151us; 56us; 151us; 58us; 151us; 59us; 151us; 62us; 151us; 64us; 151us; 80us; 151us; 82us; 151us; 84us; 151us; 86us; 151us; 88us; 151us; 90us; 151us; 93us; 151us; 96us; 151us; 98us; 151us; 124us; 151us; 125us; 151us; 126us; 151us; 127us; 151us; 128us; 151us; 129us; 151us; 130us; 151us; 131us; 151us; 132us; 151us; 133us; 151us; 134us; 151us; 135us; 151us; 136us; 151us; 137us; 151us; 138us; 151us; 140us; 151us; 141us; 151us; 144us; 151us; 145us; 151us; 148us; 151us; 152us; 151us; 160us; 151us; 163us; 151us; 166us; 151us; 8us; 65535us; 0us; 10us; 4us; 10us; 25us; 9us; 29us; 9us; 35us; 9us; 37us; 9us; 40us; 9us; 43us; 9us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 18us; 23us; 26us; 29us; 33us; 42us; 46us; 51us; 58us; 65us; 107us; 149us; 192us; 239us; 241us; 244us; 287us; 330us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 3us; 22us; 28us; 30us; 1us; 23us; 15us; 24us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 15us; 26us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 1us; 26us; 1us; 27us; 3us; 28us; 30us; 31us; 3us; 28us; 30us; 31us; 17us; 28us; 30us; 31us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 3us; 28us; 30us; 31us; 2us; 28us; 30us; 1us; 28us; 2us; 29us; 32us; 2us; 29us; 32us; 16us; 29us; 32us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 2us; 29us; 32us; 1us; 29us; 1us; 30us; 1us; 31us; 1us; 32us; 11us; 33us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 72us; 75us; 10us; 33us; 38us; 39us; 40us; 41us; 42us; 43us; 44us; 45us; 75us; 1us; 34us; 2us; 34us; 69us; 1us; 35us; 1us; 36us; 2us; 36us; 75us; 1us; 37us; 2us; 37us; 75us; 1us; 38us; 1us; 39us; 1us; 40us; 15us; 40us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 1us; 41us; 15us; 41us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 1us; 42us; 15us; 42us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 1us; 43us; 15us; 43us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 1us; 44us; 15us; 44us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 1us; 45us; 15us; 45us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 2us; 46us; 71us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 47us; 15us; 47us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 1us; 48us; 15us; 48us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 1us; 49us; 15us; 50us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 15us; 50us; 51us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 15us; 50us; 51us; 52us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 15us; 50us; 51us; 52us; 53us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 15us; 50us; 51us; 52us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 14us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 65us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 65us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 66us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 75us; 16us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 78us; 79us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 65us; 1us; 65us; 1us; 65us; 1us; 65us; 1us; 66us; 1us; 66us; 1us; 66us; 1us; 67us; 1us; 68us; 2us; 69us; 72us; 1us; 69us; 1us; 70us; 2us; 70us; 75us; 1us; 71us; 1us; 72us; 2us; 72us; 75us; 1us; 72us; 2us; 73us; 74us; 2us; 73us; 75us; 1us; 74us; 1us; 75us; 1us; 75us; 1us; 77us; 1us; 79us; 1us; 79us; 1us; 80us; 1us; 81us; 2us; 82us; 85us; 1us; 82us; 1us; 83us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 88us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 106us; 108us; 124us; 126us; 129us; 131us; 147us; 149us; 151us; 155us; 159us; 177us; 181us; 184us; 186us; 189us; 192us; 209us; 212us; 214us; 216us; 218us; 220us; 232us; 243us; 245us; 248us; 250us; 252us; 255us; 257us; 260us; 262us; 264us; 266us; 282us; 284us; 300us; 302us; 318us; 320us; 336us; 338us; 354us; 356us; 372us; 375us; 377us; 379us; 381us; 383us; 399us; 401us; 417us; 419us; 435us; 451us; 467us; 483us; 499us; 515us; 531us; 547us; 563us; 579us; 595us; 611us; 627us; 643us; 658us; 674us; 690us; 706us; 722us; 738us; 754us; 770us; 787us; 789us; 791us; 793us; 795us; 797us; 799us; 801us; 803us; 805us; 807us; 809us; 811us; 813us; 815us; 817us; 819us; 821us; 823us; 825us; 827us; 829us; 831us; 833us; 835us; 837us; 839us; 841us; 843us; 846us; 848us; 850us; 853us; 855us; 857us; 860us; 862us; 865us; 868us; 870us; 872us; 874us; 876us; 878us; 880us; 882us; 884us; 887us; 889us; 891us; 893us; 895us; 897us; 899us; |]
let _fsyacc_action_rows = 178
let _fsyacc_actionTableElements = [|4us; 16386us; 27us; 176us; 30us; 175us; 35us; 23us; 37us; 177us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 4us; 16386us; 27us; 176us; 30us; 175us; 35us; 23us; 37us; 177us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 1us; 16us; 22us; 14us; 50us; 12us; 3us; 32768us; 1us; 16us; 22us; 14us; 50us; 13us; 1us; 16390us; 5us; 19us; 0us; 16391us; 1us; 16391us; 1us; 29us; 3us; 32768us; 1us; 16us; 22us; 14us; 50us; 12us; 1us; 16392us; 5us; 19us; 3us; 32768us; 1us; 16us; 22us; 14us; 50us; 12us; 2us; 32768us; 2us; 18us; 5us; 19us; 0us; 16393us; 2us; 32768us; 6us; 20us; 51us; 21us; 0us; 16394us; 1us; 32768us; 6us; 22us; 0us; 16395us; 1us; 32768us; 50us; 24us; 1us; 32768us; 1us; 25us; 3us; 16398us; 27us; 176us; 30us; 175us; 37us; 177us; 1us; 32768us; 2us; 27us; 1us; 32768us; 3us; 37us; 0us; 16396us; 3us; 16398us; 27us; 176us; 30us; 175us; 37us; 177us; 1us; 32768us; 2us; 31us; 1us; 32768us; 3us; 37us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 8us; 35us; 3us; 32768us; 27us; 176us; 30us; 175us; 37us; 177us; 0us; 16401us; 24us; 16403us; 1us; 152us; 3us; 37us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 27us; 176us; 29us; 55us; 30us; 175us; 31us; 172us; 32us; 98us; 33us; 100us; 34us; 50us; 36us; 61us; 37us; 177us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 1us; 32768us; 4us; 39us; 0us; 16402us; 24us; 16403us; 1us; 152us; 3us; 37us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 27us; 176us; 29us; 55us; 30us; 175us; 31us; 172us; 32us; 98us; 33us; 100us; 34us; 50us; 36us; 61us; 37us; 177us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 0us; 16404us; 1us; 32768us; 7us; 43us; 24us; 16403us; 1us; 152us; 3us; 37us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 27us; 176us; 29us; 55us; 30us; 175us; 31us; 172us; 32us; 98us; 33us; 100us; 34us; 50us; 36us; 61us; 37us; 177us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 0us; 16405us; 0us; 16406us; 1us; 16406us; 28us; 59us; 0us; 16407us; 15us; 32768us; 7us; 49us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 46us; 135us; 0us; 16408us; 18us; 32768us; 1us; 152us; 7us; 51us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 0us; 16409us; 15us; 32768us; 7us; 53us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 46us; 135us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 1us; 56us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 15us; 32768us; 2us; 58us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 46us; 135us; 21us; 32768us; 1us; 152us; 3us; 37us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 29us; 55us; 31us; 172us; 32us; 98us; 33us; 100us; 34us; 50us; 36us; 61us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 21us; 32768us; 1us; 152us; 3us; 37us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 29us; 55us; 31us; 172us; 32us; 98us; 33us; 100us; 34us; 50us; 36us; 61us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 0us; 16412us; 1us; 32768us; 1us; 62us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 15us; 32768us; 2us; 64us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 46us; 135us; 21us; 32768us; 1us; 152us; 3us; 37us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 29us; 55us; 31us; 172us; 32us; 98us; 33us; 100us; 34us; 50us; 36us; 61us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 0us; 16413us; 0us; 16414us; 0us; 16415us; 0us; 16416us; 10us; 16417us; 2us; 159us; 5us; 163us; 9us; 90us; 25us; 78us; 26us; 79us; 38us; 80us; 39us; 82us; 40us; 84us; 41us; 86us; 42us; 88us; 9us; 16417us; 5us; 163us; 9us; 90us; 25us; 78us; 26us; 79us; 38us; 80us; 39us; 82us; 40us; 84us; 41us; 86us; 42us; 88us; 0us; 16418us; 1us; 16418us; 2us; 153us; 0us; 16419us; 3us; 32768us; 1us; 157us; 22us; 160us; 50us; 156us; 1us; 16420us; 5us; 163us; 3us; 32768us; 1us; 157us; 22us; 160us; 50us; 156us; 1us; 16421us; 5us; 163us; 0us; 16422us; 0us; 16423us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 13us; 16424us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 13us; 16425us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 13us; 16426us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 13us; 16427us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 13us; 16428us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 14us; 16429us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 46us; 135us; 1us; 16455us; 1us; 93us; 17us; 16460us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 1us; 32768us; 2us; 95us; 0us; 16430us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 0us; 16431us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 14us; 16432us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 46us; 135us; 0us; 16433us; 3us; 16434us; 22us; 126us; 23us; 127us; 24us; 128us; 3us; 16435us; 22us; 126us; 23us; 127us; 24us; 128us; 0us; 16436us; 0us; 16437us; 0us; 16438us; 9us; 16439us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 9us; 16440us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 9us; 16441us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 9us; 16442us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 9us; 16443us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 9us; 16444us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 15us; 32768us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 46us; 135us; 47us; 136us; 14us; 16445us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 46us; 135us; 11us; 16446us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 14us; 32768us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 46us; 135us; 12us; 16447us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 15us; 32768us; 8us; 141us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 46us; 135us; 15us; 32768us; 2us; 142us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 46us; 135us; 15us; 32768us; 8us; 145us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 46us; 135us; 15us; 32768us; 2us; 146us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 46us; 135us; 15us; 32768us; 2us; 149us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 46us; 135us; 15us; 32768us; 6us; 164us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 46us; 135us; 15us; 16462us; 8us; 166us; 12us; 138us; 13us; 137us; 14us; 129us; 15us; 130us; 16us; 131us; 17us; 132us; 18us; 133us; 19us; 134us; 20us; 124us; 21us; 125us; 22us; 126us; 23us; 127us; 24us; 128us; 46us; 135us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 1us; 32768us; 1us; 140us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 0us; 16448us; 1us; 32768us; 1us; 144us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 0us; 16449us; 1us; 32768us; 1us; 148us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 0us; 16450us; 0us; 16451us; 0us; 16452us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 0us; 16453us; 3us; 32768us; 1us; 157us; 22us; 160us; 50us; 156us; 1us; 16454us; 5us; 163us; 0us; 16455us; 3us; 32768us; 1us; 157us; 22us; 160us; 50us; 156us; 2us; 32768us; 2us; 159us; 5us; 163us; 0us; 16456us; 9us; 32768us; 1us; 152us; 10us; 154us; 21us; 170us; 22us; 160us; 31us; 172us; 48us; 173us; 50us; 156us; 51us; 168us; 52us; 169us; 1us; 16457us; 5us; 163us; 0us; 16458us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 0us; 16459us; 0us; 16461us; 17us; 32768us; 1us; 152us; 10us; 154us; 11us; 96us; 21us; 170us; 22us; 160us; 25us; 74us; 26us; 76us; 31us; 172us; 32us; 98us; 33us; 100us; 43us; 139us; 44us; 143us; 45us; 147us; 48us; 173us; 50us; 92us; 51us; 168us; 52us; 169us; 0us; 16463us; 0us; 16464us; 0us; 16465us; 2us; 32768us; 48us; 174us; 51us; 171us; 0us; 16466us; 0us; 16467us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 0us; 16471us; 0us; 16472us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 5us; 6us; 8us; 9us; 14us; 15us; 17us; 18us; 19us; 23us; 27us; 29us; 30us; 32us; 36us; 38us; 42us; 45us; 46us; 49us; 50us; 52us; 53us; 55us; 57us; 61us; 63us; 65us; 66us; 70us; 72us; 74us; 75us; 76us; 78us; 82us; 83us; 108us; 110us; 111us; 136us; 137us; 139us; 164us; 165us; 166us; 168us; 169us; 185us; 186us; 205us; 206us; 222us; 223us; 224us; 226us; 244us; 260us; 282us; 304us; 305us; 307us; 325us; 341us; 363us; 364us; 365us; 366us; 367us; 378us; 388us; 389us; 391us; 392us; 396us; 398us; 402us; 404us; 405us; 406us; 424us; 438us; 456us; 470us; 488us; 502us; 520us; 534us; 552us; 566us; 584us; 599us; 601us; 619us; 621us; 622us; 640us; 641us; 659us; 674us; 675us; 679us; 683us; 684us; 685us; 686us; 696us; 706us; 716us; 726us; 736us; 746us; 762us; 777us; 789us; 804us; 817us; 833us; 849us; 865us; 881us; 897us; 913us; 929us; 947us; 965us; 983us; 1001us; 1019us; 1037us; 1055us; 1073us; 1091us; 1109us; 1127us; 1145us; 1163us; 1181us; 1199us; 1201us; 1219us; 1237us; 1238us; 1240us; 1258us; 1276us; 1277us; 1279us; 1297us; 1298us; 1299us; 1300us; 1318us; 1319us; 1323us; 1325us; 1326us; 1330us; 1333us; 1334us; 1344us; 1346us; 1347us; 1365us; 1366us; 1367us; 1385us; 1386us; 1387us; 1388us; 1391us; 1392us; 1393us; 1394us; 1395us; 1396us; 1397us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 7us; 5us; 5us; 1us; 1us; 1us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 2us; 2us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 3us; 3us; 6us; 6us; 4us; 1us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 20us; 21us; 21us; 22us; 22us; 22us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 16406us; 65535us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 16411us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 16413us; 16414us; 16415us; 16416us; 65535us; 65535us; 16418us; 65535us; 16419us; 65535us; 65535us; 65535us; 65535us; 16422us; 16423us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 16433us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16448us; 65535us; 65535us; 65535us; 16449us; 65535us; 65535us; 16450us; 16451us; 16452us; 65535us; 16453us; 65535us; 65535us; 16455us; 65535us; 65535us; 16456us; 65535us; 65535us; 16458us; 65535us; 16459us; 16461us; 65535us; 16463us; 16464us; 16465us; 65535us; 16466us; 16467us; 16468us; 16469us; 16470us; 16471us; 16472us; |]
let _fsyacc_reductions ()  =    [| 
# 499 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 508 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "CPar.fsy"
                                                               Prog _1 
                   )
# 51 "CPar.fsy"
                 : Absyn.program));
# 519 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "CPar.fsy"
                                                               [] 
                   )
# 56 "CPar.fsy"
                 : 'gentype_Topdecs));
# 529 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 57 "CPar.fsy"
                 : 'gentype_Topdecs));
# 541 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 61 "CPar.fsy"
                 : 'gentype_Topdec));
# 552 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               _1 
                   )
# 62 "CPar.fsy"
                 : 'gentype_Topdec));
# 563 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 80 "CPar.fsy"
                 : 'gentype_Vardec));
# 575 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 91 "CPar.fsy"
                 : 'gentype_Vardesc));
# 586 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 99 "CPar.fsy"
                 : 'gentype_Vardesc));
# 597 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "CPar.fsy"
                                                               _2                                      
                   )
# 101 "CPar.fsy"
                 : 'gentype_Vardesc));
# 608 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 103 "CPar.fsy"
                 : 'gentype_Vardesc));
# 619 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 105 "CPar.fsy"
                 : 'gentype_Vardesc));
# 631 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 110 "CPar.fsy"
                 : 'gentype_Fundec));
# 644 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 112 "CPar.fsy"
                 : 'gentype_Fundec));
# 658 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "CPar.fsy"
                                                               [] 
                   )
# 117 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 668 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "CPar.fsy"
                                                               _1 
                   )
# 118 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 679 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "CPar.fsy"
                                                               [_1]     
                   )
# 122 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 690 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 123 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 702 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "CPar.fsy"
                                                               Block _2 
                   )
# 128 "CPar.fsy"
                 : 'gentype_Block));
# 713 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "CPar.fsy"
                                                               [] 
                   )
# 132 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 723 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 133 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 735 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 134 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 747 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               _1 
                   )
# 138 "CPar.fsy"
                 : 'gentype_Stmt));
# 758 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               _1 
                   )
# 139 "CPar.fsy"
                 : 'gentype_Stmt));
# 769 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 143 "CPar.fsy"
                 : 'gentype_StmtM));
# 780 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               Return None          
                   )
# 144 "CPar.fsy"
                 : 'gentype_StmtM));
# 790 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 145 "CPar.fsy"
                 : 'gentype_StmtM));
# 801 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               _1                   
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtM));
# 812 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtM));
# 825 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtM));
# 837 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtU));
# 850 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtU));
# 862 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtU));
# 874 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                               Access _1           
                   )
# 158 "CPar.fsy"
                 : 'gentype_Expr));
# 885 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               _1                  
                   )
# 159 "CPar.fsy"
                 : 'gentype_Expr));
# 896 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                               _1                  
                   )
# 163 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 907 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                               PreInc _2 
                   )
# 164 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 918 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               PreDec _2 
                   )
# 165 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 929 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               NextInc _1 
                   )
# 166 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 940 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               NextDec _1 
                   )
# 167 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 951 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               AssignOpt("+=", _1, _3)
                   )
# 168 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 963 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               AssignOpt("-=", _1, _3)
                   )
# 169 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 975 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               AssignOpt("*=", _1, _3)
                   )
# 170 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 987 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               AssignOpt("/=", _1, _3)
                   )
# 171 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 999 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               AssignOpt("%=", _1, _3)
                   )
# 172 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1011 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 173 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1023 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1035 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1046 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1057 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1067 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1079 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1091 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1103 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1115 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1127 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1139 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1151 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1163 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1175 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1187 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1199 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Prim3(_1, _3, _5)   
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1212 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1224 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1236 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Max(_3,_5) 
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1248 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Min(_3,_5) 
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1260 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Abs(_3) 
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1271 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               CstI _1             
                   )
# 202 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1282 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstFloat in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                               CstF _1             
                   )
# 203 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1293 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "CPar.fsy"
                                                               _2                  
                   )
# 204 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1304 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                               Addr _2             
                   )
# 205 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1315 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               AccVar _1           
                   )
# 209 "CPar.fsy"
                 : 'gentype_Access));
# 1326 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               _2                  
                   )
# 210 "CPar.fsy"
                 : 'gentype_Access));
# 1337 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 211 "CPar.fsy"
                 : 'gentype_Access));
# 1348 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 212 "CPar.fsy"
                 : 'gentype_Access));
# 1359 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 213 "CPar.fsy"
                 : 'gentype_Access));
# 1371 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               []       
                   )
# 217 "CPar.fsy"
                 : 'gentype_Exprs));
# 1381 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               _1       
                   )
# 218 "CPar.fsy"
                 : 'gentype_Exprs));
# 1392 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "CPar.fsy"
                                                               [_1]     
                   )
# 222 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1403 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 223 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1415 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CPar.fsy"
                                                               _1       
                   )
# 227 "CPar.fsy"
                 : 'gentype_Const));
# 1426 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               _1       
                   )
# 228 "CPar.fsy"
                 : 'gentype_Const));
# 1437 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               - _2     
                   )
# 229 "CPar.fsy"
                 : 'gentype_Const));
# 1448 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "CPar.fsy"
                                                               -1       
                   )
# 230 "CPar.fsy"
                 : 'gentype_Const));
# 1458 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "CPar.fsy"
                                                                _1      
                   )
# 234 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1469 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "CPar.fsy"
                                                                - _2    
                   )
# 235 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1480 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "CPar.fsy"
                                                               TypI     
                   )
# 239 "CPar.fsy"
                 : 'gentype_Type));
# 1490 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "CPar.fsy"
                                                               TypC     
                   )
# 240 "CPar.fsy"
                 : 'gentype_Type));
# 1500 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "CPar.fsy"
                                                               TypF 
                   )
# 241 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1511 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 56;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
