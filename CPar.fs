// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 22 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | SELFADD
  | SELFMINUS
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FLOAT
  | FOR
  | DO
  | UNTIL
  | PLUSSEMI
  | MINUSSEMI
  | TIMESSEMI
  | DIVSEMI
  | MODSEMI
  | MAX
  | MIN
  | ABS
  | WENHAO
  | MAOHAO
  | CSTFLOAT of (float32)
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_SELFADD
    | TOKEN_SELFMINUS
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FLOAT
    | TOKEN_FOR
    | TOKEN_DO
    | TOKEN_UNTIL
    | TOKEN_PLUSSEMI
    | TOKEN_MINUSSEMI
    | TOKEN_TIMESSEMI
    | TOKEN_DIVSEMI
    | TOKEN_MODSEMI
    | TOKEN_MAX
    | TOKEN_MIN
    | TOKEN_ABS
    | TOKEN_WENHAO
    | TOKEN_MAOHAO
    | TOKEN_CSTFLOAT
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_ConstFloat
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | NOT  -> 11 
  | SEQOR  -> 12 
  | SEQAND  -> 13 
  | EQ  -> 14 
  | NE  -> 15 
  | GT  -> 16 
  | LT  -> 17 
  | GE  -> 18 
  | LE  -> 19 
  | PLUS  -> 20 
  | MINUS  -> 21 
  | TIMES  -> 22 
  | DIV  -> 23 
  | MOD  -> 24 
  | SELFADD  -> 25 
  | SELFMINUS  -> 26 
  | CHAR  -> 27 
  | ELSE  -> 28 
  | IF  -> 29 
  | INT  -> 30 
  | NULL  -> 31 
  | PRINT  -> 32 
  | PRINTLN  -> 33 
  | RETURN  -> 34 
  | VOID  -> 35 
  | WHILE  -> 36 
  | FLOAT  -> 37 
  | FOR  -> 38 
  | DO  -> 39 
  | UNTIL  -> 40 
  | PLUSSEMI  -> 41 
  | MINUSSEMI  -> 42 
  | TIMESSEMI  -> 43 
  | DIVSEMI  -> 44 
  | MODSEMI  -> 45 
  | MAX  -> 46 
  | MIN  -> 47 
  | ABS  -> 48 
  | WENHAO  -> 49 
  | MAOHAO  -> 50 
  | CSTFLOAT _ -> 51 
  | CSTSTRING _ -> 52 
  | NAME _ -> 53 
  | CSTINT _ -> 54 
  | CSTBOOL _ -> 55 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_NOT 
  | 12 -> TOKEN_SEQOR 
  | 13 -> TOKEN_SEQAND 
  | 14 -> TOKEN_EQ 
  | 15 -> TOKEN_NE 
  | 16 -> TOKEN_GT 
  | 17 -> TOKEN_LT 
  | 18 -> TOKEN_GE 
  | 19 -> TOKEN_LE 
  | 20 -> TOKEN_PLUS 
  | 21 -> TOKEN_MINUS 
  | 22 -> TOKEN_TIMES 
  | 23 -> TOKEN_DIV 
  | 24 -> TOKEN_MOD 
  | 25 -> TOKEN_SELFADD 
  | 26 -> TOKEN_SELFMINUS 
  | 27 -> TOKEN_CHAR 
  | 28 -> TOKEN_ELSE 
  | 29 -> TOKEN_IF 
  | 30 -> TOKEN_INT 
  | 31 -> TOKEN_NULL 
  | 32 -> TOKEN_PRINT 
  | 33 -> TOKEN_PRINTLN 
  | 34 -> TOKEN_RETURN 
  | 35 -> TOKEN_VOID 
  | 36 -> TOKEN_WHILE 
  | 37 -> TOKEN_FLOAT 
  | 38 -> TOKEN_FOR 
  | 39 -> TOKEN_DO 
  | 40 -> TOKEN_UNTIL 
  | 41 -> TOKEN_PLUSSEMI 
  | 42 -> TOKEN_MINUSSEMI 
  | 43 -> TOKEN_TIMESSEMI 
  | 44 -> TOKEN_DIVSEMI 
  | 45 -> TOKEN_MODSEMI 
  | 46 -> TOKEN_MAX 
  | 47 -> TOKEN_MIN 
  | 48 -> TOKEN_ABS 
  | 49 -> TOKEN_WENHAO 
  | 50 -> TOKEN_MAOHAO 
  | 51 -> TOKEN_CSTFLOAT 
  | 52 -> TOKEN_CSTSTRING 
  | 53 -> TOKEN_NAME 
  | 54 -> TOKEN_CSTINT 
  | 55 -> TOKEN_CSTBOOL 
  | 58 -> TOKEN_end_of_input
  | 56 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtU 
    | 34 -> NONTERM_StmtU 
    | 35 -> NONTERM_StmtU 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_Expr 
    | 40 -> NONTERM_Expr 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_ExprNotAccess 
    | 72 -> NONTERM_ExprNotAccess 
    | 73 -> NONTERM_AtExprNotAccess 
    | 74 -> NONTERM_AtExprNotAccess 
    | 75 -> NONTERM_AtExprNotAccess 
    | 76 -> NONTERM_AtExprNotAccess 
    | 77 -> NONTERM_Access 
    | 78 -> NONTERM_Access 
    | 79 -> NONTERM_Access 
    | 80 -> NONTERM_Access 
    | 81 -> NONTERM_Access 
    | 82 -> NONTERM_Exprs 
    | 83 -> NONTERM_Exprs 
    | 84 -> NONTERM_Exprs1 
    | 85 -> NONTERM_Exprs1 
    | 86 -> NONTERM_Const 
    | 87 -> NONTERM_Const 
    | 88 -> NONTERM_Const 
    | 89 -> NONTERM_Const 
    | 90 -> NONTERM_ConstFloat 
    | 91 -> NONTERM_ConstFloat 
    | 92 -> NONTERM_Type 
    | 93 -> NONTERM_Type 
    | 94 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 58 
let _fsyacc_tagOfErrorTerminal = 56

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | SELFADD  -> "SELFADD" 
  | SELFMINUS  -> "SELFMINUS" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FLOAT  -> "FLOAT" 
  | FOR  -> "FOR" 
  | DO  -> "DO" 
  | UNTIL  -> "UNTIL" 
  | PLUSSEMI  -> "PLUSSEMI" 
  | MINUSSEMI  -> "MINUSSEMI" 
  | TIMESSEMI  -> "TIMESSEMI" 
  | DIVSEMI  -> "DIVSEMI" 
  | MODSEMI  -> "MODSEMI" 
  | MAX  -> "MAX" 
  | MIN  -> "MIN" 
  | ABS  -> "ABS" 
  | WENHAO  -> "WENHAO" 
  | MAOHAO  -> "MAOHAO" 
  | CSTFLOAT _ -> "CSTFLOAT" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | SELFADD  -> (null : System.Object) 
  | SELFMINUS  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | UNTIL  -> (null : System.Object) 
  | PLUSSEMI  -> (null : System.Object) 
  | MINUSSEMI  -> (null : System.Object) 
  | TIMESSEMI  -> (null : System.Object) 
  | DIVSEMI  -> (null : System.Object) 
  | MODSEMI  -> (null : System.Object) 
  | MAX  -> (null : System.Object) 
  | MIN  -> (null : System.Object) 
  | ABS  -> (null : System.Object) 
  | WENHAO  -> (null : System.Object) 
  | MAOHAO  -> (null : System.Object) 
  | CSTFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 8us; 65535us; 0us; 6us; 4us; 6us; 25us; 34us; 29us; 34us; 35us; 34us; 37us; 42us; 40us; 42us; 43us; 42us; 4us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 25us; 26us; 29us; 30us; 3us; 65535us; 25us; 33us; 29us; 33us; 35us; 36us; 10us; 65535us; 27us; 28us; 31us; 32us; 37us; 54us; 40us; 54us; 43us; 54us; 58us; 54us; 59us; 54us; 64us; 54us; 66us; 54us; 85us; 54us; 3us; 65535us; 37us; 38us; 40us; 41us; 43us; 44us; 4us; 65535us; 37us; 40us; 40us; 40us; 43us; 40us; 58us; 88us; 8us; 65535us; 37us; 45us; 40us; 45us; 43us; 45us; 58us; 46us; 59us; 60us; 64us; 65us; 66us; 67us; 85us; 86us; 8us; 65535us; 37us; 47us; 40us; 47us; 43us; 47us; 58us; 47us; 59us; 87us; 64us; 89us; 66us; 90us; 85us; 101us; 50us; 65535us; 37us; 48us; 40us; 48us; 43us; 48us; 50us; 52us; 56us; 57us; 58us; 48us; 59us; 48us; 62us; 63us; 64us; 48us; 66us; 48us; 69us; 70us; 74us; 75us; 79us; 80us; 81us; 82us; 83us; 84us; 85us; 48us; 92us; 93us; 97us; 98us; 113us; 114us; 115us; 116us; 117us; 118us; 119us; 120us; 121us; 122us; 123us; 124us; 126us; 156us; 129us; 130us; 131us; 132us; 157us; 134us; 158us; 135us; 159us; 136us; 160us; 137us; 161us; 138us; 162us; 139us; 163us; 140us; 164us; 141us; 165us; 142us; 166us; 143us; 167us; 144us; 168us; 145us; 169us; 146us; 170us; 147us; 171us; 149us; 173us; 150us; 174us; 151us; 177us; 152us; 178us; 153us; 181us; 154us; 185us; 148us; 196us; 155us; 199us; 156us; 50us; 65535us; 37us; 104us; 40us; 104us; 43us; 104us; 50us; 104us; 56us; 104us; 58us; 104us; 59us; 104us; 62us; 104us; 64us; 104us; 66us; 104us; 69us; 104us; 74us; 104us; 79us; 104us; 81us; 104us; 83us; 104us; 85us; 104us; 92us; 104us; 97us; 104us; 113us; 104us; 115us; 104us; 117us; 104us; 119us; 104us; 121us; 104us; 123us; 104us; 126us; 104us; 129us; 104us; 131us; 104us; 157us; 104us; 158us; 104us; 159us; 104us; 160us; 104us; 161us; 104us; 162us; 104us; 163us; 104us; 164us; 104us; 165us; 104us; 166us; 104us; 167us; 104us; 168us; 104us; 169us; 104us; 170us; 104us; 171us; 104us; 173us; 104us; 174us; 104us; 177us; 104us; 178us; 104us; 181us; 104us; 185us; 105us; 196us; 104us; 199us; 104us; 51us; 65535us; 37us; 106us; 40us; 106us; 43us; 106us; 50us; 106us; 56us; 106us; 58us; 106us; 59us; 106us; 62us; 106us; 64us; 106us; 66us; 106us; 69us; 106us; 74us; 106us; 79us; 106us; 81us; 106us; 83us; 106us; 85us; 106us; 92us; 106us; 97us; 106us; 113us; 106us; 115us; 106us; 117us; 106us; 119us; 106us; 121us; 106us; 123us; 106us; 126us; 106us; 129us; 106us; 131us; 106us; 157us; 106us; 158us; 106us; 159us; 106us; 160us; 106us; 161us; 106us; 162us; 106us; 163us; 106us; 164us; 106us; 165us; 106us; 166us; 106us; 167us; 106us; 168us; 106us; 169us; 106us; 170us; 106us; 171us; 106us; 173us; 106us; 174us; 106us; 177us; 106us; 178us; 106us; 181us; 106us; 185us; 106us; 193us; 195us; 196us; 106us; 199us; 106us; 55us; 65535us; 37us; 103us; 40us; 103us; 43us; 103us; 50us; 103us; 56us; 103us; 58us; 103us; 59us; 103us; 62us; 103us; 64us; 103us; 66us; 103us; 69us; 103us; 74us; 103us; 79us; 103us; 81us; 103us; 83us; 103us; 85us; 103us; 92us; 103us; 97us; 103us; 107us; 108us; 109us; 110us; 113us; 103us; 115us; 103us; 117us; 103us; 119us; 103us; 121us; 103us; 123us; 103us; 126us; 103us; 129us; 103us; 131us; 103us; 157us; 103us; 158us; 103us; 159us; 103us; 160us; 103us; 161us; 103us; 162us; 103us; 163us; 103us; 164us; 103us; 165us; 103us; 166us; 103us; 167us; 103us; 168us; 103us; 169us; 103us; 170us; 103us; 171us; 103us; 173us; 103us; 174us; 103us; 177us; 103us; 178us; 103us; 181us; 103us; 185us; 102us; 187us; 188us; 190us; 191us; 193us; 194us; 196us; 103us; 199us; 103us; 1us; 65535us; 126us; 127us; 2us; 65535us; 126us; 198us; 199us; 200us; 51us; 65535us; 37us; 183us; 40us; 183us; 43us; 183us; 50us; 183us; 56us; 183us; 58us; 183us; 59us; 183us; 62us; 183us; 64us; 183us; 66us; 183us; 69us; 183us; 74us; 183us; 79us; 183us; 81us; 183us; 83us; 183us; 85us; 183us; 92us; 183us; 97us; 183us; 113us; 183us; 115us; 183us; 117us; 183us; 119us; 183us; 121us; 183us; 123us; 183us; 126us; 183us; 129us; 183us; 131us; 183us; 157us; 183us; 158us; 183us; 159us; 183us; 160us; 183us; 161us; 183us; 162us; 183us; 163us; 183us; 164us; 183us; 165us; 183us; 166us; 183us; 167us; 183us; 168us; 183us; 169us; 183us; 170us; 183us; 171us; 183us; 173us; 183us; 174us; 183us; 177us; 183us; 178us; 183us; 181us; 183us; 185us; 183us; 193us; 183us; 196us; 183us; 199us; 183us; 51us; 65535us; 37us; 184us; 40us; 184us; 43us; 184us; 50us; 184us; 56us; 184us; 58us; 184us; 59us; 184us; 62us; 184us; 64us; 184us; 66us; 184us; 69us; 184us; 74us; 184us; 79us; 184us; 81us; 184us; 83us; 184us; 85us; 184us; 92us; 184us; 97us; 184us; 113us; 184us; 115us; 184us; 117us; 184us; 119us; 184us; 121us; 184us; 123us; 184us; 126us; 184us; 129us; 184us; 131us; 184us; 157us; 184us; 158us; 184us; 159us; 184us; 160us; 184us; 161us; 184us; 162us; 184us; 163us; 184us; 164us; 184us; 165us; 184us; 166us; 184us; 167us; 184us; 168us; 184us; 169us; 184us; 170us; 184us; 171us; 184us; 173us; 184us; 174us; 184us; 177us; 184us; 178us; 184us; 181us; 184us; 185us; 184us; 193us; 184us; 196us; 184us; 199us; 184us; 8us; 65535us; 0us; 10us; 4us; 10us; 25us; 9us; 29us; 9us; 35us; 9us; 37us; 9us; 40us; 9us; 43us; 9us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 18us; 23us; 26us; 29us; 33us; 44us; 48us; 53us; 62us; 71us; 122us; 173us; 225us; 281us; 283us; 286us; 338us; 390us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 3us; 22us; 28us; 33us; 1us; 23us; 15us; 24us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 15us; 26us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 26us; 1us; 27us; 3us; 28us; 33us; 34us; 3us; 28us; 33us; 34us; 17us; 28us; 33us; 34us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 3us; 28us; 33us; 34us; 2us; 28us; 33us; 1us; 28us; 2us; 29us; 35us; 2us; 29us; 35us; 16us; 29us; 35us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 2us; 29us; 35us; 1us; 29us; 4us; 30us; 31us; 36us; 37us; 2us; 30us; 31us; 1us; 30us; 1us; 30us; 15us; 30us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 15us; 31us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 31us; 1us; 31us; 2us; 32us; 38us; 2us; 32us; 38us; 16us; 32us; 38us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 2us; 32us; 38us; 16us; 32us; 38us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 2us; 32us; 38us; 16us; 32us; 38us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 2us; 32us; 38us; 1us; 32us; 1us; 33us; 1us; 34us; 1us; 35us; 2us; 36us; 37us; 1us; 36us; 1us; 36us; 15us; 36us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 37us; 15us; 37us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 37us; 1us; 37us; 1us; 38us; 11us; 39us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 78us; 81us; 10us; 39us; 44us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 81us; 1us; 40us; 2us; 40us; 75us; 1us; 41us; 1us; 42us; 2us; 42us; 81us; 1us; 43us; 2us; 43us; 81us; 1us; 44us; 1us; 45us; 1us; 46us; 15us; 46us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 47us; 15us; 47us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 48us; 15us; 48us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 49us; 15us; 49us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 50us; 15us; 50us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 51us; 15us; 51us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 2us; 52us; 77us; 1us; 52us; 1us; 52us; 1us; 52us; 1us; 53us; 15us; 53us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 54us; 15us; 54us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 55us; 15us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 15us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 15us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 15us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 15us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 15us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 15us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 15us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 15us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 66us; 67us; 68us; 69us; 15us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 66us; 67us; 68us; 69us; 15us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 66us; 67us; 68us; 69us; 15us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 67us; 68us; 69us; 15us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 67us; 68us; 69us; 15us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 68us; 69us; 14us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 15us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 69us; 15us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 15us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 15us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 71us; 15us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 71us; 15us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 72us; 15us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 81us; 16us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 84us; 85us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 71us; 1us; 71us; 1us; 71us; 1us; 71us; 1us; 72us; 1us; 72us; 1us; 72us; 1us; 73us; 1us; 74us; 2us; 75us; 78us; 1us; 75us; 1us; 76us; 2us; 76us; 81us; 1us; 77us; 1us; 78us; 2us; 78us; 81us; 1us; 78us; 2us; 79us; 80us; 2us; 79us; 81us; 1us; 80us; 1us; 81us; 1us; 81us; 1us; 83us; 1us; 85us; 1us; 85us; 1us; 86us; 1us; 87us; 2us; 88us; 91us; 1us; 88us; 1us; 89us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 93us; 1us; 94us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 106us; 108us; 124us; 126us; 129us; 131us; 147us; 149us; 151us; 155us; 159us; 177us; 181us; 184us; 186us; 189us; 192us; 209us; 212us; 214us; 219us; 222us; 224us; 226us; 242us; 244us; 246us; 248us; 250us; 266us; 268us; 270us; 273us; 276us; 293us; 296us; 313us; 316us; 333us; 336us; 338us; 340us; 342us; 344us; 347us; 349us; 351us; 367us; 369us; 371us; 373us; 375us; 391us; 393us; 395us; 397us; 409us; 420us; 422us; 425us; 427us; 429us; 432us; 434us; 437us; 439us; 441us; 443us; 459us; 461us; 477us; 479us; 495us; 497us; 513us; 515us; 531us; 533us; 549us; 552us; 554us; 556us; 558us; 560us; 576us; 578us; 594us; 596us; 612us; 628us; 644us; 660us; 676us; 692us; 708us; 724us; 740us; 756us; 772us; 788us; 804us; 820us; 835us; 851us; 867us; 883us; 899us; 915us; 931us; 947us; 964us; 966us; 968us; 970us; 972us; 974us; 976us; 978us; 980us; 982us; 984us; 986us; 988us; 990us; 992us; 994us; 996us; 998us; 1000us; 1002us; 1004us; 1006us; 1008us; 1010us; 1012us; 1014us; 1016us; 1018us; 1020us; 1023us; 1025us; 1027us; 1030us; 1032us; 1034us; 1037us; 1039us; 1042us; 1045us; 1047us; 1049us; 1051us; 1053us; 1055us; 1057us; 1059us; 1061us; 1064us; 1066us; 1068us; 1070us; 1072us; 1074us; 1076us; |]
let _fsyacc_action_rows = 211
let _fsyacc_actionTableElements = [|4us; 16386us; 27us; 209us; 30us; 208us; 35us; 23us; 37us; 210us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 4us; 16386us; 27us; 209us; 30us; 208us; 35us; 23us; 37us; 210us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 1us; 16us; 22us; 14us; 53us; 12us; 3us; 32768us; 1us; 16us; 22us; 14us; 53us; 13us; 1us; 16390us; 5us; 19us; 0us; 16391us; 1us; 16391us; 1us; 29us; 3us; 32768us; 1us; 16us; 22us; 14us; 53us; 12us; 1us; 16392us; 5us; 19us; 3us; 32768us; 1us; 16us; 22us; 14us; 53us; 12us; 2us; 32768us; 2us; 18us; 5us; 19us; 0us; 16393us; 2us; 32768us; 6us; 20us; 54us; 21us; 0us; 16394us; 1us; 32768us; 6us; 22us; 0us; 16395us; 1us; 32768us; 53us; 24us; 1us; 32768us; 1us; 25us; 3us; 16398us; 27us; 209us; 30us; 208us; 37us; 210us; 1us; 32768us; 2us; 27us; 1us; 32768us; 3us; 37us; 0us; 16396us; 3us; 16398us; 27us; 209us; 30us; 208us; 37us; 210us; 1us; 32768us; 2us; 31us; 1us; 32768us; 3us; 37us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 8us; 35us; 3us; 32768us; 27us; 209us; 30us; 208us; 37us; 210us; 0us; 16401us; 26us; 16403us; 1us; 185us; 3us; 37us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 27us; 209us; 29us; 55us; 30us; 208us; 31us; 205us; 32us; 131us; 33us; 133us; 34us; 50us; 36us; 61us; 37us; 210us; 38us; 78us; 39us; 66us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 1us; 32768us; 4us; 39us; 0us; 16402us; 26us; 16403us; 1us; 185us; 3us; 37us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 27us; 209us; 29us; 55us; 30us; 208us; 31us; 205us; 32us; 131us; 33us; 133us; 34us; 50us; 36us; 61us; 37us; 210us; 38us; 78us; 39us; 66us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 0us; 16404us; 1us; 32768us; 7us; 43us; 26us; 16403us; 1us; 185us; 3us; 37us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 27us; 209us; 29us; 55us; 30us; 208us; 31us; 205us; 32us; 131us; 33us; 133us; 34us; 50us; 36us; 61us; 37us; 210us; 38us; 78us; 39us; 66us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 0us; 16405us; 0us; 16406us; 1us; 16406us; 28us; 59us; 0us; 16407us; 15us; 32768us; 7us; 49us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 0us; 16408us; 18us; 32768us; 1us; 185us; 7us; 51us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 0us; 16409us; 15us; 32768us; 7us; 53us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 1us; 56us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 15us; 32768us; 2us; 58us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 23us; 32768us; 1us; 185us; 3us; 37us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 29us; 55us; 31us; 205us; 32us; 131us; 33us; 133us; 34us; 50us; 36us; 61us; 38us; 78us; 39us; 66us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 23us; 32768us; 1us; 185us; 3us; 37us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 29us; 55us; 31us; 205us; 32us; 131us; 33us; 133us; 34us; 50us; 36us; 61us; 38us; 78us; 39us; 66us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 0us; 16412us; 1us; 32768us; 1us; 62us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 15us; 32768us; 2us; 64us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 23us; 32768us; 1us; 185us; 3us; 37us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 29us; 55us; 31us; 205us; 32us; 131us; 33us; 133us; 34us; 50us; 36us; 61us; 38us; 78us; 39us; 66us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 0us; 16413us; 23us; 32768us; 1us; 185us; 3us; 37us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 29us; 55us; 31us; 205us; 32us; 131us; 33us; 133us; 34us; 50us; 36us; 61us; 38us; 78us; 39us; 66us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 2us; 32768us; 36us; 68us; 40us; 73us; 1us; 32768us; 1us; 69us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 15us; 32768us; 2us; 71us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 1us; 32768us; 7us; 72us; 0us; 16414us; 1us; 32768us; 1us; 74us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 15us; 32768us; 2us; 76us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 1us; 32768us; 7us; 77us; 0us; 16415us; 1us; 32768us; 1us; 79us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 15us; 32768us; 7us; 81us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 15us; 32768us; 7us; 83us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 15us; 32768us; 2us; 85us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 23us; 32768us; 1us; 185us; 3us; 37us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 29us; 55us; 31us; 205us; 32us; 131us; 33us; 133us; 34us; 50us; 36us; 61us; 38us; 78us; 39us; 66us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 0us; 16416us; 0us; 16417us; 0us; 16418us; 0us; 16419us; 2us; 32768us; 36us; 91us; 40us; 96us; 1us; 32768us; 1us; 92us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 15us; 32768us; 2us; 94us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 1us; 32768us; 7us; 95us; 0us; 16420us; 1us; 32768us; 1us; 97us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 15us; 32768us; 2us; 99us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 1us; 32768us; 7us; 100us; 0us; 16421us; 0us; 16422us; 10us; 16423us; 2us; 192us; 5us; 196us; 9us; 123us; 25us; 111us; 26us; 112us; 41us; 113us; 42us; 115us; 43us; 117us; 44us; 119us; 45us; 121us; 9us; 16423us; 5us; 196us; 9us; 123us; 25us; 111us; 26us; 112us; 41us; 113us; 42us; 115us; 43us; 117us; 44us; 119us; 45us; 121us; 0us; 16424us; 1us; 16424us; 2us; 186us; 0us; 16425us; 3us; 32768us; 1us; 190us; 22us; 193us; 53us; 189us; 1us; 16426us; 5us; 196us; 3us; 32768us; 1us; 190us; 22us; 193us; 53us; 189us; 1us; 16427us; 5us; 196us; 0us; 16428us; 0us; 16429us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 13us; 16430us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 13us; 16431us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 13us; 16432us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 13us; 16433us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 13us; 16434us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 14us; 16435us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 1us; 16461us; 1us; 126us; 17us; 16466us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 1us; 32768us; 2us; 128us; 0us; 16436us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 0us; 16437us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 14us; 16438us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 0us; 16439us; 3us; 16440us; 22us; 159us; 23us; 160us; 24us; 161us; 3us; 16441us; 22us; 159us; 23us; 160us; 24us; 161us; 0us; 16442us; 0us; 16443us; 0us; 16444us; 9us; 16445us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 9us; 16446us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 9us; 16447us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 9us; 16448us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 9us; 16449us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 9us; 16450us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 15us; 32768us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 50us; 169us; 14us; 16451us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 11us; 16452us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 14us; 32768us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 12us; 16453us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 15us; 32768us; 8us; 174us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 15us; 32768us; 2us; 175us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 15us; 32768us; 8us; 178us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 15us; 32768us; 2us; 179us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 15us; 32768us; 2us; 182us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 15us; 32768us; 6us; 197us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 15us; 16468us; 8us; 199us; 12us; 171us; 13us; 170us; 14us; 162us; 15us; 163us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 157us; 21us; 158us; 22us; 159us; 23us; 160us; 24us; 161us; 49us; 168us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 1us; 32768us; 1us; 173us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 0us; 16454us; 1us; 32768us; 1us; 177us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 0us; 16455us; 1us; 32768us; 1us; 181us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 0us; 16456us; 0us; 16457us; 0us; 16458us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 0us; 16459us; 3us; 32768us; 1us; 190us; 22us; 193us; 53us; 189us; 1us; 16460us; 5us; 196us; 0us; 16461us; 3us; 32768us; 1us; 190us; 22us; 193us; 53us; 189us; 2us; 32768us; 2us; 192us; 5us; 196us; 0us; 16462us; 9us; 32768us; 1us; 185us; 10us; 187us; 21us; 203us; 22us; 193us; 31us; 205us; 51us; 206us; 53us; 189us; 54us; 201us; 55us; 202us; 1us; 16463us; 5us; 196us; 0us; 16464us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 0us; 16465us; 0us; 16467us; 17us; 32768us; 1us; 185us; 10us; 187us; 11us; 129us; 21us; 203us; 22us; 193us; 25us; 107us; 26us; 109us; 31us; 205us; 32us; 131us; 33us; 133us; 46us; 172us; 47us; 176us; 48us; 180us; 51us; 206us; 53us; 125us; 54us; 201us; 55us; 202us; 0us; 16469us; 0us; 16470us; 0us; 16471us; 2us; 32768us; 51us; 207us; 54us; 204us; 0us; 16472us; 0us; 16473us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 0us; 16477us; 0us; 16478us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 5us; 6us; 8us; 9us; 14us; 15us; 17us; 18us; 19us; 23us; 27us; 29us; 30us; 32us; 36us; 38us; 42us; 45us; 46us; 49us; 50us; 52us; 53us; 55us; 57us; 61us; 63us; 65us; 66us; 70us; 72us; 74us; 75us; 76us; 78us; 82us; 83us; 110us; 112us; 113us; 140us; 141us; 143us; 170us; 171us; 172us; 174us; 175us; 191us; 192us; 211us; 212us; 228us; 229us; 230us; 232us; 250us; 266us; 290us; 314us; 315us; 317us; 335us; 351us; 375us; 376us; 400us; 403us; 405us; 423us; 439us; 441us; 442us; 444us; 462us; 478us; 480us; 481us; 483us; 501us; 517us; 535us; 551us; 569us; 585us; 609us; 610us; 611us; 612us; 613us; 616us; 618us; 636us; 652us; 654us; 655us; 657us; 675us; 691us; 693us; 694us; 695us; 706us; 716us; 717us; 719us; 720us; 724us; 726us; 730us; 732us; 733us; 734us; 752us; 766us; 784us; 798us; 816us; 830us; 848us; 862us; 880us; 894us; 912us; 927us; 929us; 947us; 949us; 950us; 968us; 969us; 987us; 1002us; 1003us; 1007us; 1011us; 1012us; 1013us; 1014us; 1024us; 1034us; 1044us; 1054us; 1064us; 1074us; 1090us; 1105us; 1117us; 1132us; 1145us; 1161us; 1177us; 1193us; 1209us; 1225us; 1241us; 1257us; 1275us; 1293us; 1311us; 1329us; 1347us; 1365us; 1383us; 1401us; 1419us; 1437us; 1455us; 1473us; 1491us; 1509us; 1527us; 1529us; 1547us; 1565us; 1566us; 1568us; 1586us; 1604us; 1605us; 1607us; 1625us; 1626us; 1627us; 1628us; 1646us; 1647us; 1651us; 1653us; 1654us; 1658us; 1661us; 1662us; 1672us; 1674us; 1675us; 1693us; 1694us; 1695us; 1713us; 1714us; 1715us; 1716us; 1719us; 1720us; 1721us; 1722us; 1723us; 1724us; 1725us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 7us; 7us; 9us; 7us; 5us; 5us; 7us; 7us; 9us; 1us; 1us; 1us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 2us; 2us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 3us; 3us; 6us; 6us; 4us; 1us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 20us; 21us; 21us; 22us; 22us; 22us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 16406us; 65535us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 16411us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 16417us; 16418us; 16419us; 65535us; 65535us; 65535us; 65535us; 65535us; 16420us; 65535us; 65535us; 65535us; 65535us; 16421us; 16422us; 65535us; 65535us; 16424us; 65535us; 16425us; 65535us; 65535us; 65535us; 65535us; 16428us; 16429us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16436us; 65535us; 65535us; 65535us; 65535us; 16439us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16454us; 65535us; 65535us; 65535us; 16455us; 65535us; 65535us; 16456us; 16457us; 16458us; 65535us; 16459us; 65535us; 65535us; 16461us; 65535us; 65535us; 16462us; 65535us; 65535us; 16464us; 65535us; 16465us; 16467us; 65535us; 16469us; 16470us; 16471us; 65535us; 16472us; 16473us; 16474us; 16475us; 16476us; 16477us; 16478us; |]
let _fsyacc_reductions ()  =    [| 
# 523 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 532 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "CPar.fsy"
                                                               Prog _1 
                   )
# 51 "CPar.fsy"
                 : Absyn.program));
# 543 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "CPar.fsy"
                                                               [] 
                   )
# 56 "CPar.fsy"
                 : 'gentype_Topdecs));
# 553 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 57 "CPar.fsy"
                 : 'gentype_Topdecs));
# 565 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 61 "CPar.fsy"
                 : 'gentype_Topdec));
# 576 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               _1 
                   )
# 62 "CPar.fsy"
                 : 'gentype_Topdec));
# 587 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 80 "CPar.fsy"
                 : 'gentype_Vardec));
# 599 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 91 "CPar.fsy"
                 : 'gentype_Vardesc));
# 610 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 99 "CPar.fsy"
                 : 'gentype_Vardesc));
# 621 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "CPar.fsy"
                                                               _2                                      
                   )
# 101 "CPar.fsy"
                 : 'gentype_Vardesc));
# 632 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 103 "CPar.fsy"
                 : 'gentype_Vardesc));
# 643 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 105 "CPar.fsy"
                 : 'gentype_Vardesc));
# 655 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 110 "CPar.fsy"
                 : 'gentype_Fundec));
# 668 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 112 "CPar.fsy"
                 : 'gentype_Fundec));
# 682 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "CPar.fsy"
                                                               [] 
                   )
# 117 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 692 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "CPar.fsy"
                                                               _1 
                   )
# 118 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 703 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "CPar.fsy"
                                                               [_1]     
                   )
# 122 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 714 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 123 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 726 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "CPar.fsy"
                                                               Block _2 
                   )
# 128 "CPar.fsy"
                 : 'gentype_Block));
# 737 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "CPar.fsy"
                                                               [] 
                   )
# 132 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 747 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 133 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 759 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 134 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 771 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               _1 
                   )
# 138 "CPar.fsy"
                 : 'gentype_Stmt));
# 782 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               _1 
                   )
# 139 "CPar.fsy"
                 : 'gentype_Stmt));
# 793 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 143 "CPar.fsy"
                 : 'gentype_StmtM));
# 804 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               Return None          
                   )
# 144 "CPar.fsy"
                 : 'gentype_StmtM));
# 814 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 145 "CPar.fsy"
                 : 'gentype_StmtM));
# 825 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               _1                   
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtM));
# 836 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtM));
# 849 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtM));
# 861 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 149 "CPar.fsy"
                 : 'gentype_StmtM));
# 873 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               DoUntil(_2, _5)      
                   )
# 150 "CPar.fsy"
                 : 'gentype_StmtM));
# 885 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                                         For(_3, _5, _7, _9) 
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtM));
# 899 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtU));
# 912 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtU));
# 924 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 157 "CPar.fsy"
                 : 'gentype_StmtU));
# 936 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtU in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 158 "CPar.fsy"
                 : 'gentype_StmtU));
# 948 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtU in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               DoUntil(_2, _5)      
                   )
# 159 "CPar.fsy"
                 : 'gentype_StmtU));
# 960 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                                         For(_3, _5, _7, _9) 
                   )
# 160 "CPar.fsy"
                 : 'gentype_StmtU));
# 974 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                               Access _1           
                   )
# 164 "CPar.fsy"
                 : 'gentype_Expr));
# 985 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               _1                  
                   )
# 165 "CPar.fsy"
                 : 'gentype_Expr));
# 996 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               _1                  
                   )
# 169 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1007 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               PreInc _2 
                   )
# 170 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1018 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               PreDec _2 
                   )
# 171 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1029 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               NextInc _1 
                   )
# 172 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1040 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               NextDec _1 
                   )
# 173 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1051 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               AssignOpt("+=", _1, _3)
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1063 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               AssignOpt("-=", _1, _3)
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1075 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               AssignOpt("*=", _1, _3)
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1087 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               AssignOpt("/=", _1, _3)
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1099 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               AssignOpt("%=", _1, _3)
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1111 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1123 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1135 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1146 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1157 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1167 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1179 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1191 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1203 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1215 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1227 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1239 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1251 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1263 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1275 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1287 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1299 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Prim3(_1, _3, _5)   
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1312 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1324 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 197 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1336 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               Max(_3,_5) 
                   )
# 198 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1348 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               Min(_3,_5) 
                   )
# 199 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1360 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               Abs(_3) 
                   )
# 200 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1371 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               CstI _1             
                   )
# 208 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1382 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstFloat in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               CstF _1             
                   )
# 209 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1393 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               _2                  
                   )
# 210 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1404 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               Addr _2             
                   )
# 211 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1415 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               AccVar _1           
                   )
# 215 "CPar.fsy"
                 : 'gentype_Access));
# 1426 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               _2                  
                   )
# 216 "CPar.fsy"
                 : 'gentype_Access));
# 1437 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 217 "CPar.fsy"
                 : 'gentype_Access));
# 1448 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 218 "CPar.fsy"
                 : 'gentype_Access));
# 1459 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 219 "CPar.fsy"
                 : 'gentype_Access));
# 1471 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CPar.fsy"
                                                               []       
                   )
# 223 "CPar.fsy"
                 : 'gentype_Exprs));
# 1481 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               _1       
                   )
# 224 "CPar.fsy"
                 : 'gentype_Exprs));
# 1492 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               [_1]     
                   )
# 228 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1503 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 229 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1515 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "CPar.fsy"
                                                               _1       
                   )
# 233 "CPar.fsy"
                 : 'gentype_Const));
# 1526 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "CPar.fsy"
                                                               _1       
                   )
# 234 "CPar.fsy"
                 : 'gentype_Const));
# 1537 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "CPar.fsy"
                                                               - _2     
                   )
# 235 "CPar.fsy"
                 : 'gentype_Const));
# 1548 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "CPar.fsy"
                                                               -1       
                   )
# 236 "CPar.fsy"
                 : 'gentype_Const));
# 1558 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "CPar.fsy"
                                                                _1      
                   )
# 240 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1569 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "CPar.fsy"
                                                                - _2    
                   )
# 241 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1580 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "CPar.fsy"
                                                               TypI     
                   )
# 245 "CPar.fsy"
                 : 'gentype_Type));
# 1590 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 "CPar.fsy"
                                                               TypC     
                   )
# 246 "CPar.fsy"
                 : 'gentype_Type));
# 1600 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 "CPar.fsy"
                                                               TypF 
                   )
# 247 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1611 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 59;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
